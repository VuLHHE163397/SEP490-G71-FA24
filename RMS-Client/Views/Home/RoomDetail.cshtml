@using RMS_API.DTOs
@{
    var roomDetail = ViewData["RoomDetail"] as RoomDetailDTO;
    var suggestedRooms = ViewData["SuggestedRooms"] as List<SuggestedRoomDTO>;
}

<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="utf-8">
    <title>RMS-Thông tin chi tiết</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <link href="~/images/logos/house.png" rel="icon">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/lib/animate/animate.min.css" rel="stylesheet">
    <link href="~/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="~/css/bootstrap1.min.css" rel="stylesheet">
    <link href="~/css/style1.css" rel="stylesheet">

    <style>
        /* Layout styles */
        html, body {
            height: 100%; /* Đảm bảo chiều cao đầy đủ cho body */
            margin: 0; /* Bỏ margin của body */
        }

        .image-gallery {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        .carousel img {
            height: 400px;
            object-fit: cover;
        }

        .thumbnail-gallery {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .thumbnail-image {
            cursor: pointer;
            max-height: 75px;
            object-fit: cover;
            border: 2px solid transparent;
        }

            .thumbnail-image:hover,
            .thumbnail-image.active {
                border-color: #007bff; /* Màu xanh khi chọn */
            }

        .container-xxl {
            display: flex;
            flex-direction: column; /* Đặt chiều dọc cho các phần tử */
            min-height: 100vh; /* Chiều cao tối thiểu là 100% chiều cao của viewport */
        }

        .content {
            flex: 1; /* Đẩy nội dung chính chiếm hết không gian còn lại */
        }

        .footer {
            width: 100%; /* Đảm bảo footer rộng bằng 100% */
            padding: 20px; /* Thêm padding để nội dung không bị chèn sát mép */
            background-color: #343a40; /* Màu nền của footer */
            margin-top: auto; /* Đẩy footer xuống dưới */
        }

        .main-container {
            display: flex;
        }

        .left-column, .right-column {
            padding: 20px;
        }

        .left-column {
            flex: 2;
            border-right: 1px solid #ddd;
        }

        .right-column {
            flex: 1;
            background-color: #f4f4f4;
        }

        .room-details {
            padding: 15px;
            background-color: #f9f9f9;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .map-container {
            margin-top: 20px;
            border-radius: 8px;
            overflow: hidden;
            height: 450px;
        }

        iframe {
            width: 100%;
            height: 100%;
            border: none;
        }
    </style>
</head>

<body>
    <div class="container-xxl bg-white p-0">
        <!-- Header Start -->
        <div class="container-fluid bg-dark px-0 header">
            <div class="row gx-0">
                <div class="col-lg-3 bg-dark d-none d-lg-block">
                    <a asp-controller="Home" asp-action="Home"
                       class="navbar-brand w-100 h-100 m-0 p-0 d-flex align-items-center justify-content-center">
                        <h1 class="m-0 text-primary text-uppercase">RMS</h1>
                    </a>
                </div>
                <div class="col-lg-9">
                    <nav class="navbar navbar-expand-lg bg-dark navbar-dark p-3 p-lg-0">
                        <a asp-controller="Home" asp-action="Home" class="navbar-brand d-block d-lg-none">
                            <h1 class="m-0 text-primary text-uppercase">RMS</h1>
                        </a>
                        <button type="button" class="navbar-toggler" data-bs-toggle="collapse"
                                data-bs-target="#navbarCollapse">
                            <span class="navbar-toggler-icon"></span>
                        </button>
                        <div class="collapse navbar-collapse justify-content-between" id="navbarCollapse">
                            <div class="navbar-nav mr-auto py-0">
                                <a asp-controller="Home" asp-action="Home" class="nav-item nav-link active">Trang chủ</a>
                                <!-- Conditional rendering for roles -->
                                @if (User.IsInRole("Admin"))
                                {
                                    <a href="Admin/manage" class="nav-item nav-link">Quản lí</a>
                                }
                                else if (User.IsInRole("Landlord"))
                                {
                                    <a href="Landlord/manage" class="nav-item nav-link">Quản lí</a>
                                }
                            </div>
                        </div>
                        <!-- Favorite Count Icon in Header -->
                        <a asp-controller="Home" asp-action="ListFavouriteRoom" class="btn btn-outline-danger rounded-circle position-relative">
                            <i class="fa fa-heart"></i>
                            <span id="favoriteCount" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                0
                            </span>
                        </a>
                        <a asp-controller="Home" asp-action="Login"
                           class="nav-item nav-link active">
                            Đăng nhập<i class="fa fa-arrow-right ms-3"></i>
                        </a>
                    </nav>
                </div>
            </div>
        </div>
        <!-- Header End -->

        <div class="container-xxl py-5 content">
            <div class="container">
                <h1 style="color: #FEA116; margin-left:180px" class="text-uppercase">Thông tin chi tiết</h1>
                <div class="main-container">
                    <!-- Left Column -->
                    <div class="left-column">
                        <div class="room-details">
                            <!-- Gallery: Ảnh lớn -->
                            <div id="mainImageCarousel" class="carousel slide" data-bs-ride="carousel">
                                <div class="carousel-inner">
                                    @if (Model.Images != null && Model.Images.Count > 0)
                                    {
                                        @for (int i = 0; i < Model.Images.Count; i++)
                                        {
                                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                                <img src="@Model.Images[i].Link" class="d-block w-100" alt="Room Image">
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="carousel-item active">
                                            <img src="~/images/default-room.jpg" class="d-block w-100" alt="Default Room Image">
                                        </div>
                                    }
                                </div>
                                <button class="carousel-control-prev" type="button" data-bs-target="#mainImageCarousel" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#mainImageCarousel" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            </div>

                            <!-- Gallery: Danh sách ảnh nhỏ -->
                            <div class="thumbnail-gallery mt-3">
                                <div class="row">
                                    @if (Model.Images != null && Model.Images.Count > 0)
                                    {
                                        @for (int i = 0; i < Model.Images.Count; i++)
                                        {
                                            <div class="col-2">
                                                <img src="@Model.Images[i].Link" class="img-thumbnail thumbnail-image"
                                                     onclick="changeCarouselSlide(@i)" alt="Thumbnail">
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="col-2">
                                            <img src="~/images/default-room.jpg" class="img-thumbnail thumbnail-image" alt="Default Thumbnail">
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Thông tin chi tiết phòng -->
                            <p><strong>Chủ nhà:</strong> @Model.OwnerName</p>
                            <p><strong>Số điện thoại:</strong> @Model.OwnerPhone</p>
                            <p><strong>Facebook:</strong> @Model.Facebook</p>
                            <p><strong>Zalo:</strong> @Model.Zalo</p>
                            <p><strong>Địa chỉ phòng:</strong> @Model.FullAddress</p>
                            @{
                                decimal priceInMillions = Model.Price / 1_000_000;
                                string formattedPrice = priceInMillions.ToString("0");
                            }
                            <p><strong>Giá:</strong> @formattedPrice triệu VND</p>
                            <p><strong>Diện tích:</strong> @Model.Area.ToString("0") m²</p>
                            <p><strong>Khoảng cách:</strong> @Model.Distance?.ToString("0") km</p>
                            <p><strong>Trạng thái phòng:</strong> @Model.RoomStatus</p>
                            <p><strong>Mô tả chi tiết:</strong> @Model.Description</p>
                            @if (!string.IsNullOrEmpty(Model.LinkEmbedMap))
                            {
                                <h4>Vị trí trên bản đồ</h4>
                                <div class="map-container">
                                    @Html.Raw(Model.LinkEmbedMap)
                                </div>
                            }
                        </div>
                    </div>
                    <div class="right-column">
                        <h4 style="color: mediumblue; text-align:center;" class="text-uppercase">Một số phòng khác ở trong tòa nhà</h4>
                        <div class="row">
                            @if (suggestedRooms != null && suggestedRooms.Any())
                            {
                                foreach (var room in suggestedRooms)
                                {
                                    <div class="col-md-12">
                                        <a style="text-decoration: none; color: inherit;" onclick="window.open('@Url.Action("RoomDetail", "Home", new { id = room.Id })', '_blank')">
                                            <div class="card mb-4">
                                                <!-- Hiển thị ảnh phòng, nếu có -->
                                                <img class="img-fluid" src="@room.FirstImageLink" alt="Room Image">
                                                <div class="card-body">
                                                    <p class="card-text"><strong>Tên phòng:</strong> @room.RoomNumber</p>
                                                    @{
                                                        // Chuyển đổi giá từ VND sang triệu VND
                                                        decimal priceMillions = room.Price / 1_000_000;
                                                        string formatPrice = priceInMillions.ToString("0");
                                                    }
                                                    <p class="card-title"><strong>Giá:</strong> @formatPrice triệu VND</p>
                                                    <p class="card-text"><strong>Diện tích:</strong> @room.Area m²</p>
                                                    <p class="card-text">
                                                        <strong>Trạng thái:</strong>
                                                        <span style="color: green; text-transform: uppercase; font-weight: bold;">
                                                            @room.RoomStatusName
                                                        </span>
                                                    </p>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>Không có phòng gợi ý nào.</p>
                            }
                        </div>
                    </div>

                </div>
            </div>

            <!-- Footer -->
            <div class="container-fluid bg-dark text-light footer wow fadeIn" data-wow-delay="0.1s">
                <div class="container">
                    <div class="copyright">
                        <div class="row">
                            <div class="col-md-6 text-center text-md-start mb-3 mb-md-0">
                                &copy; <a class="border-bottom" href="#">RMS</a>, All Rights Reserved.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Back to Top -->
        <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
        <!-- JavaScript Libraries -->
        <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/lib/wow/wow.min.js"></script>
        <script src="~/lib/easing/easing.min.js"></script>
        <script src="~/lib/waypoints/waypoints.min.js"></script>
        <script src="~/lib/counterup/counterup.min.js"></script>
        <script src="~/lib/owlcarousel/owl.carousel.min.js"></script>
        <script src="~/lib/tempusdominus/js/moment.min.js"></script>
        <script src="~/lib/tempusdominus/js/moment-timezone.min.js"></script>
        <script src="~/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

        <!-- Template Javascript -->
        <script src="~/js/main.js"></script>
        <script>
            // Function to get favorites from cookies
            function getFavorites() {
                const favorites = document.cookie
                    .split('; ')
                    .find(row => row.startsWith('favorites='))
                    ?.split('=')[1];
                return favorites ? JSON.parse(decodeURIComponent(favorites)) : [];
            }

            // Function to set favorites in cookies with an expiration of 7 days
            function setFavorites(favorites) {
                const now = new Date();
                now.setTime(now.getTime() + (7 * 24 * 60 * 60 * 1000)); // 7 days
                const expires = "expires=" + now.toUTCString();
                document.cookie = 'favorites=' + encodeURIComponent(JSON.stringify(favorites)) + '; ' + expires + '; path=/';
            }

            // Function to update the favorite count in the header
            function updateFavoriteCount() {
                const favorites = getFavorites();
                const favoriteCount = favorites.length;
                const favoriteCountElement = document.getElementById('favoriteCount');
                if (favoriteCountElement) {
                    favoriteCountElement.innerText = favoriteCount; // Update favorite count
                }
            }

            // Function to toggle favorite status
            function toggleFavorite(element) {
                const roomId = element.getAttribute("data-room-id");
                const roomAddress = element.getAttribute("data-room-address");
                const roomImage = "~/images/room1.jpg"; // Fixed image path

                let favorites = getFavorites();

                // Check if the room is already in favorites
                const existingFavoriteIndex = favorites.findIndex(room => room.id === roomId);

                if (existingFavoriteIndex === -1) {
                    // Add to favorites if not already present
                    favorites.push({ id: roomId, image: roomImage, address: roomAddress });
                } else {
                    // Remove from favorites if already present
                    favorites.splice(existingFavoriteIndex, 1);
                }

                setFavorites(favorites);
                updateFavoriteCount();
            }

            // Initialize favorite count on page load
            document.addEventListener('DOMContentLoaded', () => {
                updateFavoriteCount(); // Display favorite count from cookie when page loads
            });
            // Hàm thay đổi slide dựa trên ảnh nhỏ được nhấp
            function changeCarouselSlide(index) {
                const carousel = document.getElementById('mainImageCarousel');
                const carouselInstance = bootstrap.Carousel.getInstance(carousel);
                carouselInstance.to(index); // Chuyển tới slide được chỉ định
            }
            function navigateToDetail(url) {
                window.open(url, '_blank'); // Mở trang trong tab mới
            }
        </script>
</body>
</html>
