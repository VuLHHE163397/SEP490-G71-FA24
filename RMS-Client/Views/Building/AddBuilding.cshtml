@model List<RMS_API.DTOs.AddBuildingDTO>

@{
    ViewData["Title"] = "Tạo Tòa Nhà";
}

<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>RMS</title>
    <link href="~/images/logos/house.png" rel="icon">
    <link rel="stylesheet" href="~/css/styles.min.css" />

    <!-- Custom CSS Styles -->
    <style>

        /* CSS for AddBuilding Form */
        .container {
            max-width: 600px;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

            .form-group label {
                font-weight: bold;
                color: #555;
            }

        .form-control {
            padding: 10px;
            font-size: 16px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

            .form-control:focus {
                border-color: #007bff;
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
            }

        .btn-primary, .btn-secondary {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            margin-top: 10px;
            border-radius: 4px;
        }

        .btn-primary {
            background-color: #007bff;
            border: none;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        .btn-secondary {
            background-color: #6c757d;
            border: none;
        }

            .btn-secondary:hover {
                background-color: #5a6268;
            }



        /* Sidebar styling */
        .sidebar-submenu {
            padding-left: 15px;
            display: none;
        }

        .sidebar-sublink {
            color: #6c757d;
            font-size: 0.9rem;
            transition: color 0.3s;
        }

            .sidebar-sublink:hover {
                color: #0d6efd;
            }

        /* Sidebar arrow rotation */
        .rotate {
            transform: rotate(180deg);
            transition: transform 0.3s;
        }

        /* Table styling */
        .table-striped tbody tr:nth-of-type(odd) {
            background-color: rgba(0, 0, 0, 0.05);
        }

        /* Button styles */
        .btn-primary {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
        }

        /* Page wrapper styles */
        .page-wrapper {
            display: flex;
        }

        /* Main content area padding */
        .body-wrapper {
            /* padding: 20px; */
            flex-grow: 1;
        }

        /* Header navbar icon */
        .nav-icon-hover {
            cursor: pointer;
        }

        /* Profile image in dropdown */
        .navbar-nav .dropdown-menu img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
        }

        .popup-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            overflow: auto; /* Thêm để cho phép cuộn toàn màn hình nếu cần */
        }

        .popup-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            width: 1000%; /* Đặt chiều rộng cố định tương đối */
            max-width: 900px; /* Giới hạn chiều rộng tối đa */
            max-height: 80vh; /* Chiều cao tối đa chiếm 80% viewport */
            overflow-y: auto; /* Kích hoạt thanh cuộn dọc nếu nội dung vượt quá */
            text-align: center;
        }

            .popup-content h2 {
                margin-top: 0;
            }

            .popup-content button {
                margin-top: 20px;
                padding: 10px 20px;
                background: #007bff;
                color: white;
                border: none;
                border-radius: 5px;
                cursor: pointer;
            }

                .popup-content button:hover {
                    background: #0056b3;
                }

        .form-group a {
            cursor: pointer;
            color: #007bff;
            text-decoration: underline;
        }

            .form-group a:hover {
                color: #0056b3;
            }

        #welcome-message {
            position: relative;
            font-weight: bold;
        }


    </style>
</head>
<body>
    <script>
        function getCookie(name) {
            const cookieString = document.cookie.split('; ').find(row => row.startsWith(`${name}=`));
            return cookieString ? decodeURIComponent(cookieString.split('=')[1]) : null;
        }

        const token = getCookie('AuthToken');
        if (!token) {
            console.error('Token không tìm thấy trong cookie.');
        }
        const tokenParts = token.split('.');
        const payload = JSON.parse(atob(tokenParts[1]));
        if (payload.Roles !== "Landlord") {
            window.location.href = "/Auth/login";
        }

        function logout() {
            document.cookie = "AuthToken=; path=/; expires=Sun, 01 Jan 1111 00:00:00 UTC; SameSite=None; Secure";
            window.location.href = "/Auth/Login";
        }

    </script>

    <!--  Body Wrapper -->
    <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
         data-sidebar-position="fixed" data-header-position="fixed">
        <!-- Sidebar Start -->
        <aside class="left-sidebar">
            <!-- Sidebar scroll-->
            <div>
                <div class="brand-logo d-flex align-items-center justify-content-between">
                    <a asp-controller="Statistic" asp-action="ViewStatistic" class="text-nowrap logo-img">
                        <img src="~/images/logo.jpg" width="180" alt="" />
                    </a>
                    <div class="close-btn d-xl-none d-block sidebartoggler cursor-pointer" id="sidebarCollapse">
                        <i class="ti ti-x fs-8"></i>
                    </div>
                </div>
                <!-- Sidebar navigation-->
                <nav class="sidebar-nav scroll-sidebar" data-simplebar="">
                    <ul id="sidebarnav">
                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Trang chủ</span>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Building" asp-action="ListBuilding">
                                <span><i class="ti ti-layout-dashboard"></i></span>
                                <span class="hide-menu">Trang chủ</span>
                            </a>
                        </li>
                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Quản lý</span>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" href="#" aria-expanded="false" onclick="toggleSubmenu(event)">
                                <span><i class="ti ti-home"></i></span>
                                <span class="hide-menu">Quản lý phòng</span>
                                <span><i class="ti ti-chevron-down"></i></span>
                            </a>
                            <ul class="sidebar-submenu" style="display: block; list-style-type: none; padding-left: 20px;">
                            </ul>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Facility" asp-action="ListFacility" aria-expanded="false">
                                <span>
                                    <i class="fa-solid fa-gears"></i>
                                </span>
                                <span class="hide-menu">Cơ sở vật chất</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Service" asp-action="ListService" aria-expanded="false">
                                <span>
                                    <i class="ti ti-menu"></i>
                                </span>
                                <span class="hide-menu">Dịch vụ</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Service" asp-action="ServiceRecord" aria-expanded="false">
                                <span>
                                    <i class="fa-solid fa-bolt"></i>
                                </span>
                                <span class="hide-menu"> <i class="fa-solid fa-plug-circle-bolt"></i> Chỉ số điện</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Maintainance" asp-action="ListMaintainance" aria-expanded="false">
                                <span>
                                    <i class="fa-regular fa-envelope"></i>
                                </span>
                                <span class="hide-menu"> Danh sách báo cáo</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Statistic" asp-action="ViewStatistic" aria-expanded="false">
                                <span>
                                    <i class="fa fa-bar-chart"></i>
                                </span>
                                <span class="hide-menu"> Thống kê phòng</span>
                            </a>
                        </li>
                    </ul>
                </nav>
                <!-- End Sidebar navigation -->
            </div>
            <!-- End Sidebar scroll-->
        </aside>
        <!--  Sidebar End -->
        <!--  Main wrapper -->
        <div class="body-wrapper">

            <header class="app-header" style="background-color:  whitesmoke">
                <nav class="navbar navbar-expand-lg navbar-light">
                    <ul class="navbar-nav">
                        <li class="nav-item d-block d-xl-none">
                            <a class="nav-link sidebartoggler nav-icon-hover" id="headerCollapse" href="javascript:void(0)">
                                <i class="ti ti-menu-2"></i>
                            </a>
                        </li>
                    </ul>
                    <div class="navbar-collapse justify-content-end px-0" id="navbarNav">
                        <ul class="navbar-nav flex-row ms-auto align-items-center justify-content-end">
                            <li class="nav-item me-3">
                                <span id="welcome-message" class="fw-bold text-primary"></span>
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link nav-icon-hover" href="javascript:void(0)" id="drop2" data-bs-toggle="dropdown"
                                   aria-expanded="false">
                                    <img src="~/images/profile/user-1.jpg" alt="" width="50" height="50" class="rounded-circle">
                                </a>
                                <div class="dropdown-menu dropdown-menu-end dropdown-menu-animate-up" aria-labelledby="drop2">
                                    <div class="message-body">
                                        <a href="/User/ViewProfile" class="d-flex align-items-center gap-2 dropdown-item">
                                            <i class="ti ti-user fs-6"></i>
                                            <p class="mb-0 fs-3">Tài Khoản</p>
                                        </a>

                                        <a href="/Auth/Login" class="btn btn-outline-primary mx-3 mt-2 d-block " onclick="logout()">Đăng xuất</a>

                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>

                </nav>
            </header>
            <!--  Header End -->
            <div class="container-fluid">
                <div class="container mt-4">
                    <h1>@ViewData["Title"]</h1>

                    <form id="addBuildingForm">
                        <div class="form-group">
                            <label for="Name">Tên tòa nhà</label>
                            <input type="text" class="form-control" id="Name" name="Name" required />
                            <span id="buildingNameError" class="error-message" style="color: red; display: none;">Tên tòa nhà bị trùng. Vui lòng nhập lại!</span>
                        </div>
                        <div class="form-group">
                            <label for="TotalFloors">Số tầng của tòa nhà </label>
                            <input type="number" class="form-control" id="TotalFloors" name="TotalFloors" required />
                            <span id="totalFloorsError" class="error-message" style="color: red; display: none;">Số tầng phải là số nguyên dương và không chứa kí tự đặc biệt .</span>
                        </div>
                        <div class="form-group">
                            <label for="NumberOfRooms">Số phòng của tòa nhà</label>
                            <input type="number" class="form-control" id="NumberOfRooms" name="NumberOfRooms" required />
                            <span id="numberOfRoomsError" class="error-message" style="color: red; display: none;">Số phòng phải là số nguyên dương và không chứa kí tự đặc biệt .</span>
                        </div>
                        <div class="form-group">
                            <label for="Distance">Khoảng cách (km)</label>
                            <input type="number" class="form-control" id="Distance" name="Distance" required step="0.1" />
                            <span id="distanceError" class="error-message" style="color: red; display: none;">Khoảng cách phải là một số dương và không chứa kí tự đặc biệt.</span>
                        </div>
                        <div class="form-group">
                            <label for="ProvinceId">Tỉnh/Thành phố</label>
                            <select id="ProvinceId" name="ProvinceId" class="form-control">
                                <option value="">Chọn Tỉnh/Thành phố</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="DistrictId">Quận/Huyện</label>
                            <select class="form-control" id="DistrictId" name="DistrictName" required>
                                <option value="">Chọn Quận/Huyện</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="WardId">Xã/Phường </label>
                            <select class="form-control" id="WardId" name="WardName" required>
                                <option value="">Chọn Xã/Phường</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="BuildingStatus">Trạng thái tòa nhà </label>
                            <select class="form-control" id="BuildingStatus" name="BuildingStatus" required>
                                <option value="Hoạt Động">Hoạt Động</option>
                                <option value="Hủy Hoạt Động">Hủy Hoạt Động</option>
                                <option value="Sửa Chữa">Sửa Chữa</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="AddressDetails">Địa chỉ cụ thể</label>
                            <input type="text" class="form-control" id="AddressDetails" name="AddressDetails" required />
                        </div>
                        <div class="form-group">
                            <label for="LinkEmbedMap">Link Map</label>
                            <input type="text" class="form-control" id="LinkEmbedMap" name="LinkEmbedMap" required />
                            <a style="color: blue; font-style: italic; font-weight: bold;" id="openPopup">Cách lấy link Embed Google Map</a>
                        </div>
                        <button type="submit" class="btn btn-primary" id="saveButton">Tạo Tòa Nhà</button>
                        <a asp-controller="Building" asp-action="ListBuilding" class="btn btn-secondary">Trở Về</a>
                    </form>

                    <!-- Popup -->
                    <div class="popup-overlay" id="popupOverlay" style="display: none;">
                        <div class="popup-content">
                            <h2>Hướng dẫn lấy link ghim Google Map</h2>
                            <p>1. Mở Google Maps trên trình duyệt hoặc ứng dụng</p>
                            <img src="~/images/1.jpg" alt="Hình ảnh hướng dẫn 1" style="width: 100%; margin: 10px 0;">
                            <p>2. Tìm địa điểm mà bạn muốn lấy liên kết.</p>
                            <img src="~/images/2.jpg" alt="Hình ảnh hướng dẫn 2" style="width: 100%; margin: 10px 0;">
                            <p>3. Nhấn nút "Chia sẻ" và chọn "Nhúng bản đồ".</p>
                            <img src="~/images/3.jpg" alt="Hình ảnh hướng dẫn 3" style="width: 100%; margin: 10px 0;">
                            <p>4. Sao chép đoạn mã hoặc liên kết nhúng và dán vào ô nhập link ghim google map phía trên.</p>
                            <button id="closePopup">Đóng</button>
                        </div>
                    </div>
                </div>
            </div>

            <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

            <script>
                // Kiểm tra giá trị nhập vào của các trường ngay khi người dùng gõ
                document.getElementById('TotalFloors').addEventListener('input', function () {
                    validateTotalFloors();
                });

                document.getElementById('NumberOfRooms').addEventListener('input', function () {
                    validateNumberOfRooms();
                });

                document.getElementById('Distance').addEventListener('input', function () {
                    validateDistance();
                });

                const submitError = document.getElementById('submitError');

                function validateTotalFloors() {
                    const specialCharPattern = /[^a-zA-Z0-9]/;
                    const floor = document.getElementById('TotalFloors').value;
                    const totalFloorsError = document.getElementById('totalFloorsError');
                    const saveButton = document.getElementById('saveButton');

                    if (floor === "") {
                        totalFloorsError.textContent = "Số tầng của tòa nhà không được để trống";
                        totalFloorsError.style.display = 'inline';
                        document.getElementById('buttonSave').disabled = true;
                        submitError.style.display = 'inline';
                    }
                    // Kiểm tra giá trị không hợp lệ (bao gồm ký tự đặc biệt hoặc giá trị nhỏ hơn hoặc bằng 0)
                    else if (specialCharPattern.test(floor) || parseFloat(floor) <= 0 || parseFloat(floor) > 50) {
                        totalFloorsError.textContent = "Số tầng phải là số nguyên dương và không quá 50 và không chứa kí tự đặc biệt";
                        totalFloorsError.style.display = 'inline';
                        saveButton.disabled = true;
                        submitError.style.display = 'inline';
                    } else {
                        totalFloorsError.style.display = 'none';
                        saveButton.disabled = false;
                    }
                }

                function validateNumberOfRooms() {
                    const specialCharPattern = /[^a-zA-Z0-9]/;
                    const room = document.getElementById('NumberOfRooms').value;
                    const numberOfRoomsError = document.getElementById('numberOfRoomsError');
                    const saveButton = document.getElementById('saveButton');

                    if (room === "") {
                        numberOfRoomsError.textContent = "Số phòng của tòa nhà không được để trống";
                        numberOfRoomsError.style.display = 'inline';
                        document.getElementById('buttonSave').disabled = true;
                        submitError.style.display = 'inline';
                    }
                    // Kiểm tra giá trị không hợp lệ (bao gồm ký tự đặc biệt, giá trị nhỏ hơn hoặc bằng 0, hoặc lớn hơn 100)
                    else if (specialCharPattern.test(room) || parseFloat(room) <= 0 || parseFloat(room) > 100) {
                        numberOfRoomsError.textContent = "Số phòng phải là số nguyên dương và không quá 100 và không chứa kí tự đặc biệt";
                        numberOfRoomsError.style.display = 'inline';
                        saveButton.disabled = true;
                    } else {
                        numberOfRoomsError.style.display = 'none';
                        saveButton.disabled = false;
                    }
                }

                function validateDistance() {
                    const specialCharPattern = /[^0-9.]/;
                    const distance = document.getElementById('Distance').value.trim();
                    const distanceError = document.getElementById('distanceError');
                    const saveButton = document.getElementById('saveButton');

                    if (distance === "") {
                        distanceError.textContent = "Khoảng cách không được để trống";
                        distanceError.style.display = 'inline';
                        document.getElementById('buttonSave').disabled = true;
                        submitError.style.display = 'inline';
                    }
                    // Kiểm tra giá trị không hợp lệ (bao gồm ký tự đặc biệt, không phải số, hoặc giá trị nhỏ hơn hoặc bằng 0)
                    else if (specialCharPattern.test(distance) || isNaN(distance) || parseFloat(distance) <= 0) {
                        distanceError.textContent = "Khoảng cách phải là số dương và không chứa kí tự đặc biệt";
                        distanceError.style.display = 'inline';
                        saveButton.disabled = true;
                    } else {
                        distanceError.style.display = 'none';
                        saveButton.disabled = false;
                    }
                }
                // Xử lý form khi gửi
                document.getElementById('addBuildingForm').addEventListener('submit', function (event) {
                    validateDistance();
                    validateNumberOfRooms();
                    validateTotalFloors();

                    // Nếu có lỗi, ngăn form gửi
                    if (document.querySelectorAll('.error-message[style="display: inline;"]').length > 0) {
                        event.preventDefault();
                    }
                });


                $(document).ready(function () {
                    GetUserNameById();
                    getProvinces();
                    // Province to District Fetch
                    // Check Building Name Uniqueness
                    $('#Name').blur(function () {
                        const buildingName = $(this).val();
                        const token = getCookie('AuthToken');
                        if (!buildingName) {
                            $('#buildingNameError').show().text('Tên tòa nhà không được để trống.');
                            $('#buildingNameSuccess').hide();
                            return;
                        }
                        if (!token) {
                            alert('Bạn chưa đăng nhập. Xin hãy quay lại trang login.');
                            return;
                        }
                        const userId = getUserIdFromToken(token);
                        if (!buildingName || !userId) return;

                        const url = `https://localhost:7056/api/Building/CheckBuildingName/${userId}/${encodeURIComponent(buildingName)}`;

                        $.ajax({
                            url: url,
                            type: 'GET',
                            success: function (response) {
                                // Clear any existing messages
                                $('#buildingNameError').hide();
                                $('#buildingNameSuccess').hide();

                                if (response.message === "Thành công.") {
                                    $('#buildingNameSuccess').show().text('Tên tòa nhà hợp lệ.');
                                }
                            },
                            error: function (xhr) {
                                $('#buildingNameError').show().text(xhr.responseJSON?.message || 'Có lỗi xảy ra.');
                            }
                        });
                    });


                    $('#ProvinceId').change(function () {
                        var provinceName = encodeURIComponent($(this).val());
                        var url = `https://localhost:7056/api/Building/GetDistrictsByProvince/${provinceName}`;

                        if (provinceName) {
                            $.ajax({
                                url: url,
                                type: 'GET',
                                success: function (data) {
                                    $('#DistrictId').empty();
                                    $('#DistrictId').append('<option value="">Chọn Quận</option>');
                                    $.each(data, function (index, district) {
                                        $('#DistrictId').append('<option value="' + district.name + '">' + district.name + '</option>');
                                    });
                                },
                                error: function () {
                                    alert('Có lỗi xảy ra khi lấy danh sách quận.');
                                }
                            });
                        } else {
                            $('#DistrictId').empty().append('<option value="">Chọn Quận</option>');
                            $('#WardId').empty().append('<option value="">Chọn Xã</option>');
                        }
                    });


                    // District to Ward Fetch
                    $('#DistrictId').change(function () {
                        var districtName = encodeURIComponent($(this).val());
                        var url = `https://localhost:7056/api/Building/GetWardsByDistrict/${districtName}`;

                        if (districtName) {
                            $.ajax({
                                url: url,
                                type: 'GET',
                                success: function (data) {
                                    $('#WardId').empty();
                                    $('#WardId').append('<option value="">Chọn Xã</option>');
                                    $.each(data, function (index, ward) {
                                        $('#WardId').append('<option value="' + ward.name + '">' + ward.name + '</option>');
                                    });
                                },
                                error: function () {
                                    alert('Có lỗi xảy ra khi lấy xã.');
                                }
                            });
                        } else {
                            $('#WardId').empty().append('<option value="">Chọn Xã</option>');
                        }
                    });

                    // Form Submission
                    $('#addBuildingForm').submit(function (event) {
                        event.preventDefault(); // Ngăn chặn form gửi đi mặc định

                        // Reset thông báo lỗi trước đó
                        $('.error-message').hide(); 

                        // Get UserId from Token
                        const token = getCookie('AuthToken');
                        if (!token) {
                            alert('Bạn chưa đăng nhập. Xin hãy quay lại trang login.');
                            return;
                        }
                        var userId = getUserIdFromToken(token);
                        if (!userId) {
                            $('#userIdError').show(); // Show error if UserId is missing
                            return;
                        }

                        var buildingData = {
                            Name: $('#Name').val(),
                            TotalFloors: $('#TotalFloors').val(),
                            NumberOfRooms: $('#NumberOfRooms').val(),
                            Distance: $('#Distance').val(),
                            ProvinceName: $('#ProvinceId').val(),
                            DistrictName: $('#DistrictId').val(),
                            WardName: $('#WardId').val(),
                            AddressDetails: $('#AddressDetails').val(),
                            BuildingStatus: $('#BuildingStatus').val(),
                            LinkEmbedMap: $('#LinkEmbedMap').val(),
                            UserId: userId // Include UserId in the request
                        };

                        // Send Data to API
                        $.ajax({
                            url: 'https://localhost:7056/api/Building/AddBuildingbyId',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(buildingData),
                            success: function (response) {
                                alert('Tòa nhà đã được tạo thành công.');
                                window.location.href = '/Building/ListBuilding'; // Redirect to the list page
                            },
                            error: function (xhr) {
                                alert('Có lỗi xảy ra: ' + xhr.responseText);
                            }
                        });
                    });

                    // Utility Function: Extract UserId from Token
                    function getUserIdFromToken(token) {
                        try {
                            const tokenParts = token.split('.');
                            const payload = JSON.parse(atob(tokenParts[1]));
                            return payload.UserId;
                        } catch (error) {
                            console.error("Không mã hóa đc token:", error);
                            return null;
                        }
                    }
                });

                function getProvinces() {
                    const url = 'https://localhost:7056/api/Building/GetProvinces';

                    $.ajax({
                        url: url,
                        type: 'GET',
                        success: function (data) {
                            // Clear and populate the Province dropdown
                            $('#ProvinceId').empty();
                            $('#ProvinceId').append('<option value="">Chọn Tỉnh</option>'); // Default option
                            $.each(data, function (index, province) {
                                $('#ProvinceId').append('<option value="' + province.name + '">' + province.name + '</option>');
                            });
                        },
                        error: function () {
                            alert('Có lỗi xảy ra khi lấy danh sách tỉnh.');
                        }
                    });
                }

                // Popup Handling
                const openPopup = document.getElementById('openPopup');
                const closePopup = document.getElementById('closePopup');
                const popupOverlay = document.getElementById('popupOverlay');

                // Show popup on click
                openPopup.addEventListener('click', () => {
                    popupOverlay.style.display = 'block';
                });

                // Close popup when clicking the close button
                closePopup.addEventListener('click', () => {
                    popupOverlay.style.display = 'none';
                });

                // Close popup when clicking outside the popup content
                popupOverlay.addEventListener('click', (event) => {
                    if (event.target === popupOverlay) {
                        popupOverlay.style.display = 'none';
                    }
                });

                function toggleSubmenu(event) {
                    event.preventDefault();
                    var submenu = event.currentTarget.nextElementSibling;
                    submenu.style.display = submenu.style.display === "none" ? "block" : "none";
                }


                $(document).ready(function () {
                    loadBuilding();                   
                })

                function loadBuilding() {
                    const token = getCookie('AuthToken');
                    if (!token) {
                        alert('Bạn chưa đăng nhập. Xin hãy quay lại trang login.');
                        window.location.href = "/Auth/login";
                        return;
                    }
                    var userId = getUserIdFromToken(token);
                    $.ajax({
                        url: `https://localhost:7056/api/Building/GetBuildingsByUserId/${userId}`,// Sửa api lấy all building thành api này
                        type: 'GET',
                        dataType: 'json',
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader('Authorization', `Bearer ${token}`);
                        },
                        success: function (response) {
                            renderBuilding(response);
                            displayBuildings(response); //Thêm cái này nữa
                        },
                        error: function (xhr, status, error) {
                            console.error("Có lỗi xảy ra:", error);
                        }
                    });
                }

                function renderBuilding(data) {
                    var urlParams = new URLSearchParams(window.location.search);
                    var buildingId = urlParams.get('buildingId');
                    let html = `<option value="-1" ${buildingId <= 0 ? 'selected' : ''}>Tất cả</option>`;
                    for (var item of data) {
                        html += `<option value="${item.id}" ${buildingId == item.id ? 'selected' : ''}>${item.name}</option>`
                    }
                    $("#buildings").html(html);
                }

                function displayBuildings(buildings) {
                    const sidebarContainer = $('.sidebar-submenu');

                    // Clear previous content
                    sidebarContainer.empty();

                    if (buildings && buildings.length > 0) {
                        // Update Sidebar
                        buildings.forEach(building => {
                            sidebarContainer.append(`
                                                                                                <li class="sidebar-subitem">
                                                                                                    <a href="/Room/ListRoom?buildingId=${building.id}" class="sidebar-sublink">
                                                                                                                <i class="fa-solid fa-house" style="color: #0672e5;"></i> ${building.name}
                                                                                                    </a>
                                                                                                </li>
                                                                                            `);
                        });
                    } else {
                        displayNoBuildingsMessage();
                    }
                }
                function displayNoBuildingsMessage() {
                    const sidebarContainer = $('.sidebar-submenu');
                    const tableContainer = $('#buildingsContainer');

                    // Notify in Sidebar
                    sidebarContainer.empty();
                    sidebarContainer.append(`
                                                                                        <li class="sidebar-subitem">Không có tòa nhà nào</li>
                                                                                    `);
                }
                //Lấy UserId
                function getUserIdFromToken(token) {
                    try {
                        const tokenParts = token.split('.');
                        const payload = JSON.parse(atob(tokenParts[1]));
                        return payload.UserId;
                    } catch (error) {
                        console.error("Không mã hóa đc token:", error);
                        return null;
                    }
                }

                function GetUserNameById() {
                    const token = getCookie('AuthToken');
                    const userId = getUserIdFromToken(token);
                    const url = `https://localhost:7056/api/User/GetUserNameById?id=${userId}`;

                    $.ajax({
                        url: url,
                        type: 'GET',
                        success: function (response) {
                            if (response && response.fullName) {
                                $('#welcome-message').text(`Xin chào ${response.fullName}`);
                            }
                        },
                        error: function (xhr) {
                            console.error('Error fetching user profile:', xhr.responseText);
                        }
                    });
                }

            </script>
        </div>
    </div>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Thêm Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Thêm jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Thêm Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>