@model RMS_API.DTOs.BuildingDTO

@{
    ViewData["Title"] = "Chỉnh sửa Tòa Nhà"; // Page title
}

<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>RMS</title>
    <link href="~/images/logos/house.png" rel="icon">
    <link rel="stylesheet" href="~/css/styles.min.css" />

    <!-- Custom CSS Styles -->
    <style>

        /* CSS for AddBuilding Form */
        .container {
            max-width: 600px;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

            .form-group label {
                font-weight: bold;
                color: #555;
            }

        .form-control {
            padding: 10px;
            font-size: 16px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

            .form-control:focus {
                border-color: #007bff;
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
            }

        .btn-primary, .btn-secondary {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            margin-top: 10px;
            border-radius: 4px;
        }

        .btn-primary {
            background-color: #007bff;
            border: none;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        .btn-secondary {
            background-color: #6c757d;
            border: none;
        }

            .btn-secondary:hover {
                background-color: #5a6268;
            }

        .error-message {
            display: none;
            color: red;
            font-size: 0.9em;
        }

            .error-message.visible {
                display: block;
            }

        /* Sidebar styling */
        .sidebar-submenu {
            padding-left: 15px;
            display: none;
        }

        .sidebar-sublink {
            color: #6c757d;
            font-size: 0.9rem;
            transition: color 0.3s;
        }

            .sidebar-sublink:hover {
                color: #0d6efd;
            }

        /* Sidebar arrow rotation */
        .rotate {
            transform: rotate(180deg);
            transition: transform 0.3s;
        }

        /* Table styling */
        .table-striped tbody tr:nth-of-type(odd) {
            background-color: rgba(0, 0, 0, 0.05);
        }

        /* Button styles */
        .btn-primary {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
        }

        /* Page wrapper styles */
        .page-wrapper {
            display: flex;
        }

        /* Main content area padding */
        .body-wrapper {
            /* padding: 20px; */
            flex-grow: 1;
        }

        /* Header navbar icon */
        .nav-icon-hover {
            cursor: pointer;
        }

        /* Profile image in dropdown */
        .navbar-nav .dropdown-menu img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
        }

        .dropdown-item {
            padding: 8px 12px;
            cursor: pointer;
        }

            .dropdown-item:hover {
                background-color: aqua;
            }

    </style>
</head>
<body>
    <script>
        function getCookie(name) {
            const cookieString = document.cookie.split('; ').find(row => row.startsWith(`${name}=`));
            return cookieString ? decodeURIComponent(cookieString.split('=')[1]) : null;
        }

        const token = getCookie('AuthToken');
        if (!token) {
            console.error('Token không tìm thấy trong cookie.');
        }
        const tokenParts = token.split('.');
        const payload = JSON.parse(atob(tokenParts[1]));
        if (payload.Roles !== "Landlord") {
            window.location.href = "/Auth/login";
        }

        function logout() {
            document.cookie = "AuthToken=; path=/; expires=Sun, 01 Jan 1111 00:00:00 UTC; SameSite=None; Secure";
            window.location.href = "/Auth/Login";
        }

    </script>


    <!--  Body Wrapper -->
    <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
         data-sidebar-position="fixed" data-header-position="fixed">
        <aside class="left-sidebar">
            <!-- Sidebar scroll-->
            <div>
                <div class="brand-logo d-flex align-items-center justify-content-between">
                    <a asp-controller="Statistic" asp-action="ViewStatistic" class="text-nowrap logo-img">
                        <img src="~/images/logo.jpg" width="180" alt="" />
                    </a>
                    <div class="close-btn d-xl-none d-block sidebartoggler cursor-pointer" id="sidebarCollapse">
                        <i class="ti ti-x fs-8"></i>
                    </div>
                </div>
                <!-- Sidebar navigation-->
                <nav class="sidebar-nav scroll-sidebar" data-simplebar="">
                    <ul id="sidebarnav">
                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Trang chủ</span>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Building" asp-action="ListBuilding">
                                <span><i class="ti ti-layout-dashboard"></i></span>
                                <span class="hide-menu">Trang chủ</span>
                            </a>
                        </li>
                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Quản lý</span>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" href="#" aria-expanded="false" onclick="toggleSubmenu(event)">
                                <span><i class="ti ti-home"></i></span>
                                <span class="hide-menu">Quản lý phòng</span>
                                <span><i class="ti ti-chevron-down"></i></span>
                            </a>
                            <ul class="sidebar-submenu" style="display: block; list-style-type: none; padding-left: 20px;">
                               
                            </ul>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Facility" asp-action="ListFacility" aria-expanded="false">
                                <span>
                                    <i class="fa-solid fa-gears"></i>
                                </span>
                                <span class="hide-menu">Cơ sở vật chất</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Service" asp-action="ListService" aria-expanded="false">
                                <span>
                                    <i class="ti ti-menu"></i>
                                </span>
                                <span class="hide-menu">Dịch vụ</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Service" asp-action="ServiceRecord" aria-expanded="false">
                                <span>
                                    <i class="fa-solid fa-bolt"></i>
                                </span>
                                <span class="hide-menu"> <i class="fa-solid fa-plug-circle-bolt"></i> Chỉ số điện</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Maintainance" asp-action="ListMaintainance" aria-expanded="false">
                                <span>
                                    <i class="fa-regular fa-envelope"></i>
                                </span>
                                <span class="hide-menu"> Danh sách báo cáo</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Statistic" asp-action="ViewStatistic" aria-expanded="false">
                                <span>
                                    <i class="fa fa-bar-chart"></i>
                                </span>
                                <span class="hide-menu"> Thống kê phòng</span>
                            </a>
                        </li>
                    </ul>
                </nav>
                <!-- End Sidebar navigation -->
            </div>
            <!-- End Sidebar scroll-->
        </aside>
        <!--  Sidebar End -->
        <!--  Main wrapper -->
        <div class="body-wrapper">

            <header class="app-header" style="background-color:  whitesmoke">
                <nav class="navbar navbar-expand-lg navbar-light">
                    <ul class="navbar-nav">
                        <li class="nav-item d-block d-xl-none">
                            <a class="nav-link sidebartoggler nav-icon-hover" id="headerCollapse" href="javascript:void(0)">
                                <i class="ti ti-menu-2"></i>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link nav-icon-hover" href="javascript:void(0)">
                                <i class="ti ti-bell-ringing"></i>
                                <div class="notification bg-primary rounded-circle"></div>
                            </a>
                        </li>
                    </ul>
                    <div class="navbar-collapse justify-content-end px-0" id="navbarNav">
                        <ul class="navbar-nav flex-row ms-auto align-items-center justify-content-end">
                            <li class="nav-item dropdown">
                                <a class="nav-link nav-icon-hover" href="javascript:void(0)" id="drop2" data-bs-toggle="dropdown"
                                   aria-expanded="false">
                                    <img src="~/images/profile/user-1.jpg" alt="" width="50" height="50" class="rounded-circle">
                                </a>
                                <div class="dropdown-menu dropdown-menu-end dropdown-menu-animate-up" aria-labelledby="drop2">
                                    <div class="message-body">
                                        <a href="/User/ViewProfile" class="d-flex align-items-center gap-2 dropdown-item">
                                            <i class="ti ti-user fs-6"></i>
                                            <p class="mb-0 fs-3">Tài Khoản</p>
                                        </a>

                                        <a href="/Auth/Login" class="btn btn-outline-primary mx-3 mt-2 d-block " onclick="logout()">Đăng xuất</a>

                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>

                </nav>
            </header>
            <!--  Header End -->
           

            <div class="container-fluid">
                <div class="container mt-4">
                    <h1>@ViewData["Title"]</h1>

                    <!-- Form for Editing Building -->
                    <form id="editBuilding" onsubmit="editBuilding(); return false;">
                        <input type="hidden" id="BuildingId" name="BuildingId" value="@Model.Id" />

                        <div class="form-group">
                            <label for="Name">Tên Tòa Nhà</label>
                            <input type="text" class="form-control" id="Name" name="Name" value="@Model.Name" required />
                            <span id="buildingNameError" class="error-message" style="color: red; display: none;">Tên tòa nhà bị trùng. Vui lòng nhập lại!</span>
                        </div>
                        <div class="form-group">
                            <label for="Distance">Khoảng cách(Km)</label>
                            <input type="number" class="form-control" id="Distance" name="Distance" value="@Model.Distance" step="0.1" required  />
                            <span id="distanceError" class="error-message" style="color: red; display: none;">Khoảng cách phải là một số dương.</span>
                        </div>
                        <div class="form-group">
                            <label for="TotalFloors">Số Tầng</label>
                            <input type="number" class="form-control" id="TotalFloors" name="TotalFloors" value="@Model.TotalFloors" required />
                            <span id="totalFloorsError" class="error-message" style="color: red; display: none;">Số tầng phải là số dương và không vượt quá 100.</span>
                        </div>
                        <div class="form-group">
                            <label for="NumberOfRooms">Số Phòng</label>
                            <input type="number" class="form-control" id="NumberOfRooms" name="NumberOfRooms" value="@Model.NumberOfRooms" required />
                            <span id="numberOfRoomsError" class="error-message" style="color: red; display: none;">Số phòng phải là số dương và không vượt quá 500.</span>
                        </div>
                        <div class="form-group">
                            <label for="AddressDetails">Địa Chỉ</label>
                            <input type="text" class="form-control" id="AddressDetails" name="AddressDetails" value="@Model.AddressDetails" required readonly />
                        </div>

                        <div class="form-group">
                            <label for="ProvinceId">Tỉnh/Thành phố</label>
                            <input class="form-control" id="ProvinceId" name="ProvinceName" value="@Model.ProvinceName" required readonly />
                        </div>
                        <div class="form-group">
                            <label for="DistrictId">Quận/Huyện</label>
                            <input class="form-control" id="DistrictId" name="DistrictName" value="@Model.DistrictName" required readonly />
                        </div>
                        <div class="form-group">
                            <label for="WardId">Xã/Phường</label>
                            <input class="form-control" id="WardId" name="WardName" value="@Model.WardName" required readonly />
                        </div>
                        <div class="form-group">
                            <label for="LinkEmbedMap">Link Map</label>
                            <input class="form-control" id="LinkEmbedMap" name="LinkEmbedMap" value="@Model.LinkEmbedMap" required />
                        </div>
                        <div class="form-group" style="position: relative;">
                            <label for="BuildingStatus">Trạng Thái</label>

                            <!-- Input field for displaying selected status -->
                            <input type="text" class="form-control" id="BuildingStatus" name="BuildingStatus"
                                   value="@Model.BuildingStatus" readonly onclick="toggleDropdown()" />

                            <!-- Custom dropdown menu that appears when input is clicked -->
                            <div id="BuildingStatusDropdown" style="display: none; position: absolute; top: 100%; left: 0; width: 100%; border: 1px solid #ced4da; border-radius: 4px; background-color: #fff; z-index: 1000;">
                                <div class="dropdown-item" onclick="selectStatus('Hoạt động')">Hoạt động</div>
                                <div class="dropdown-item" onclick="selectStatus('Hủy hoạt động')">Hủy hoạt động</div>
                                <div class="dropdown-item" onclick="selectStatus('Sửa chữa')">Sửa chữa</div>
                            </div>
                        </div>




                        <button type="submit" class="btn btn-primary" href="/Building/ListBuilding" id="saveButton">Lưu</button>
                    </form>
                </div>
            </div>
            <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
            <script>

                // Kiểm tra giá trị nhập vào của các trường ngay khi người dùng gõ
                document.getElementById('TotalFloors').addEventListener('input', function () {
                    validateTotalFloors();
                });

                document.getElementById('NumberOfRooms').addEventListener('input', function () {
                    validateNumberOfRooms();
                });

                document.getElementById('Distance').addEventListener('input', function () {
                    validateDistance();
                });

                const submitError = document.getElementById('submitError');



                function validateTotalFloors() {
                    const floor = document.getElementById('TotalFloors').value;
                    const totalFloorsError = document.getElementById('totalFloorsError');
                    const saveButton = document.getElementById('saveButton'); // Đúng ID

                    if (parseFloat(floor) <= 0) {
                        totalFloorsError.style.display = 'inline';
                        saveButton.disabled = true; // Disable nút lưu khi có lỗi
                    } else {
                        totalFloorsError.style.display = 'none';
                        saveButton.disabled = false; // Kích hoạt nút lưu khi không có lỗi
                    }
                }
                function validateNumberOfRooms() {
                    const room = document.getElementById('NumberOfRooms').value;
                    const numberOfRoomsError = document.getElementById('numberOfRoomsError');
                    const saveButton = document.getElementById('saveButton');

                    if (parseFloat(room) <= 0) {
                        numberOfRoomsError.style.display = 'inline';
                        saveButton.disabled = true;
                    } else {
                        numberOfRoomsError.style.display = 'none';
                        saveButton.disabled = false;
                    }
                }

                function validateDistance() {
                    const distance = document.getElementById('Distance').value;
                    const distanceError = document.getElementById('distanceError');
                    const saveButton = document.getElementById('saveButton');

                    if (parseFloat(distance) <= 0) {
                        distanceError.style.display = 'inline';
                        saveButton.disabled = true;
                    } else {
                        distanceError.style.display = 'none';
                        saveButton.disabled = false;
                    }
                }


                // Helper function to get cookie value by name
                function getCookie(name) {
                    const value = `; ${document.cookie}`;
                    const parts = value.split(`; ${name}=`);
                    if (parts.length === 2) return parts.pop().split(';').shift();
                    return null;
                }
                // Toggle Dropdown Visibility
                function toggleDropdown() {
                    var dropdown = document.getElementById("BuildingStatusDropdown");
                    dropdown.style.display = (dropdown.style.display === "none") ? "block" : "none";
                }

                // Select Status from Dropdown
                function selectStatus(status) {
                    document.getElementById("BuildingStatus").value = status;
                    document.getElementById("BuildingStatusDropdown").style.display = "none";
                }


                document.getElementById('editBuilding').addEventListener('submit', function (event) {
                    validateTotalFloors();
                    validateNumberOfRooms();
                    validateDistance();

                    const hasErrors = document.querySelectorAll('.error-message[style="display: inline;"]').length > 0;

                    if (hasErrors) {
                        event.preventDefault(); // Ngăn không cho submit form
                        alert("Vui lòng sửa các lỗi trước khi gửi.");
                    }
                });


                // Extract User ID from Token
                function getUserIdFromToken(token) {
                    try {
                        const tokenParts = token.split('.');
                        const payload = JSON.parse(atob(tokenParts[1]));
                        return payload.UserId;
                    } catch (error) {
                        console.error("Error decoding token:", error);
                        return null;
                    }
                }

                // Fetch List of Buildings
                function getListBuilding() {
                    const token = getCookie('AuthToken');
                    if (!token) {
                        alert('You are not logged in. Redirecting to login page.');
                        window.location.href = "/Auth/login";
                        return;
                    }

                    var userId = getUserIdFromToken(token);
                    const url = `https://localhost:7056/api/Building/GetBuildingsByUserId/${userId}`;

                    $.ajax({
                        url: url,
                        type: 'GET',
                        xhrFields: { withCredentials: true },
                        contentType: 'application/json',
                        success: function (response) {
                            console.log('Buildings fetched successfully:', response);
                            displayBuildings(response);
                        },
                        error: function (xhr) {
                            console.error('Error fetching buildings:', xhr.responseText);
                            displayNoBuildingsMessage();
                        }
                    });
                }

                // Display Buildings in Sidebar and Table
                function displayBuildings(buildings) {
                    const sidebarContainer = $('.sidebar-submenu');
                    const tableContainer = $('#buildingsContainer');

                    sidebarContainer.empty();
                    tableContainer.empty();

                    if (buildings && buildings.length > 0) {
                        buildings.forEach(building => {
                            sidebarContainer.append(`
                                    <li class="sidebar-subitem">
                                        <a href="/Room/ListRoom?buildingId=${building.id}" class="sidebar-sublink">
                                            <i class="fa-solid fa-house" style="color: #0672e5;"></i> ${building.name}
                                        </a>
                                    </li>
                                `);

                            tableContainer.append(`
                                    <tr>
                                        <td>${building.id}</td>
                                        <td>${building.name}</td>
                                        <td>${building.totalFloors}</td>
                                        <td>${building.numberOfRooms}</td>
                                        <td>${building.addressDetails}</td>
                                        <td>${building.buildingStatus}</td>
                                        <td>
                                            <a href="/Building/EditBuilding/${building.id}" title="Edit" style="font-size: 1.5em; color: black; margin-right: 10px;">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="/Building/BuildingDetail/${building.id}" title="View Details" style="font-size: 1.5em;">
                                                <i class="ti ti-eye"></i>
                                            </a>
                                        </td>
                                    </tr>
                                `);
                        });
                    } else {
                        displayNoBuildingsMessage();
                    }
                }

                // Edit Building Functionality
                function editBuilding() {
                    var id = $('#BuildingId').val();
                    if (!id) {
                        alert('Building ID is missing.');
                        return;
                    }

                    var url = `https://localhost:7056/api/Building/EditBuilding/${id}`;
                    var buildingData = {
                        Name: $('#Name').val(),
                        Distance: parseFloat($('#Distance').val()),
                        TotalFloors: parseInt($('#TotalFloors').val()),
                        NumberOfRooms: parseInt($('#NumberOfRooms').val()),
                        AddressDetails: $('#AddressDetails').val(),
                        ProvinceName: $('#ProvinceId').val(),
                        DistrictName: $('#DistrictId').val(),
                        WardName: $('#WardId').val(),
                        BuildingStatus: $('#BuildingStatus').val(),
                        LinkEmbedMap: $('#LinkEmbedMap').val()
                    };

                    $.ajax({
                        url: url,
                        type: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify(buildingData),
                        success: function (response) {
                            alert('Cập nhật tòa nhà thành công!');
                            window.location.href = '/Building/ListBuilding';
                        },
                        error: function (xhr) {
                            alert('Error updating building: ' + xhr.responseText);
                        }
                    });
                }

                // Toggle Submenu in Sidebar
                function toggleSubmenu(event) {
                    event.preventDefault();
                    var submenu = event.currentTarget.nextElementSibling;
                    submenu.style.display = submenu.style.display === "none" ? "block" : "none";
                }

                // On Document Ready, Fetch Buildings
                $(document).ready(function () {
                    $('#Name').blur(function () {
                        const buildingName = $(this).val();
                        const token = getCookie('AuthToken');
                        if (!token) {
                            alert('Bạn chưa đăng nhập. Xin hãy quay lại trang login.');
                            return;
                        }
                        const userId = getUserIdFromToken(token);
                        if (!buildingName || !userId) return;

                        const url = `https://localhost:7056/api/Building/CheckBuildingName/${userId}/${encodeURIComponent(buildingName)}`;

                        $.ajax({
                            url: url,
                            type: 'GET',
                            success: function (response) {
                                // Clear any existing messages
                                $('#buildingNameError').hide();
                                $('#buildingNameSuccess').hide();

                                if (response.message === "Thành công.") {
                                    $('#buildingNameSuccess').show().text('Tên tòa nhà hợp lệ.');
                                }
                            },
                            error: function (xhr) {
                                $('#buildingNameError').show().text(xhr.responseJSON?.message || 'Có lỗi xảy ra.');
                            }
                        });
                    });
                    getListBuilding();
                    validateTotalFloors();
                    validateNumberOfRooms();
                    validateDistance();

                });

                function GetUserNameById() {
                    const token = getCookie('AuthToken');
                    const userId = getUserIdFromToken(token);
                    const url = `https://localhost:7056/api/User/GetUserNameById?id=${userId}`;

                    $.ajax({
                        url: url,
                        type: 'GET',
                        success: function (response) {
                            if (response && response.fullName) {
                                $('#welcome-message').text(`Xin chào ${response.fullName}`);
                            }
                        },
                        error: function (xhr) {
                            console.error('Error fetching user profile:', xhr.responseText);
                        }
                    });
                }
            </script>

        </div>

        <script src="~/lib/simplebar/dist/simplebar.js"></script>
        <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <!-- Thêm Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css" rel="stylesheet">

        <!-- Thêm jQuery -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

        <!-- Thêm Bootstrap JS -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

</body>

</html>