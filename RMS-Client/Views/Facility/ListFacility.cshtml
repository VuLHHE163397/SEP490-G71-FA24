@model List<RMS_API.DTOs.FacilityDTO>
@{
    ViewData["Title"] = "Danh sách quản lý cơ sở vật chất"; // Page title
}
<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>RMS</title>
    <link rel="shortcut icon" type="image/png" href="~/images/logos/favicon.png" />
    <link rel="stylesheet" href="~/css/styles.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>

        /* Sidebar styling */
        .sidebar-submenu {
            padding-left: 15px;
            display: none;
        }

        .sidebar-sublink {
            color: #6c757d;
            font-size: 0.9rem;
            transition: color 0.3s;
        }

            .sidebar-sublink:hover {
                color: #0d6efd;
            }

        /* Sidebar arrow rotation */
        .rotate {
            transform: rotate(180deg);
            transition: transform 0.3s;
        }

        /* Table styling */
        .table-striped tbody tr:nth-of-type(odd) {
            background-color: rgba(0, 0, 0, 0.05);
        }

        /* Button styles */
        .btn-primary {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
        }

        /* Page wrapper styles */
        .page-wrapper {
            display: flex;
        }

        /* Main content area padding */
        .body-wrapper {
            /* padding: 20px; */
            flex-grow: 1;
        }

        /* Header navbar icon */
        .nav-icon-hover {
            cursor: pointer;
        }

        /* Profile image in dropdown */
        .navbar-nav .dropdown-menu img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
        }

        .welcome-message {
            position: relative;
            font-weight: bold;
        }
    </style>
</head>

<body>

    <script>
        function getCookie(name) {
            const cookieString = document.cookie.split('; ').find(row => row.startsWith(`${name}=`));
            return cookieString ? decodeURIComponent(cookieString.split('=')[1]) : null;
        }

        const token = getCookie('AuthToken');
        if (!token) {
            console.error('Token không tìm thấy trong cookie.');
        }
        const tokenParts = token.split('.');
        const payload = JSON.parse(atob(tokenParts[1]));
        if (payload.Roles !== "Landlord") {
            window.location.href = "/Auth/login";
        }

        function logout() {
            document.cookie = "AuthToken=; path=/; expires=Sun, 01 Jan 1111 00:00:00 UTC; SameSite=None; Secure";
            window.location.href = "/Auth/Login";
        }

    </script>

    <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
         data-sidebar-position="fixed" data-header-position="fixed">

        <aside class="left-sidebar">

            <div>
                <div class="brand-logo d-flex align-items-center justify-content-between">
                    <a asp-controller="Statistic" asp-action="ViewStatistic" class="text-nowrap logo-img">
                        <img src="~/images/logo.jpg" width="180" alt="" />
                    </a>
                    <div class="close-btn d-xl-none d-block sidebartoggler cursor-pointer" id="sidebarCollapse">
                        <i class="ti ti-x fs-8"></i>
                    </div>
                </div>

                <nav class="sidebar-nav scroll-sidebar" data-simplebar="">
                    <ul id="sidebarnav">
                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Trang chủ</span>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Building" asp-action="ListBuilding">
                                <span><i class="ti ti-layout-dashboard"></i></span>
                                <span class="hide-menu">Trang chủ</span>
                            </a>
                        </li>
                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Quản lý</span>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" href="#" aria-expanded="false" onclick="toggleSubmenu(event)">
                                <span><span><i class="ti ti-home"></i></span></span>
                                <span class="hide-menu">Quản lý phòng</span>
                                <span><i class="ti ti-chevron-down"></i></span>
                            </a>
                            <ul class="sidebar-submenu" style="display: block; list-style-type: none; padding-left: 20px;">
                                @* @{
                                    var buildingsss = ViewBag.Buildings as List<RMS_API.Models.Building>;
                                }
                                @if (buildingsss != null && buildingsss.Any())
                                {
                                    foreach (var buildingss in buildingsss)
                                    {
                                        <li class="sidebar-subitem">
                                            <a asp-controller="Room" asp-action="ListRoom" asp-route-buildingId="@buildingss.Id" class="sidebar-sublink">
                                                <i class="fa-solid fa-house" style="color: #0672e5;"></i>
                                                @buildingss.Name
                                            </a>
                                        </li>
                                    }
                                }
                                else
                                {
                                    <li class="sidebar-subitem">Không có tòa nhà nào</li>
                                } *@
                            </ul>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Facility" asp-action="ListFacility" aria-expanded="false">
                                <span>
                                    <i class="fa-solid fa-gears"></i>
                                </span>
                                <span class="hide-menu">Cơ sở vật chất</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Service" asp-action="ListService" aria-expanded="false">
                                <span>
                                    <i class="ti ti-menu"></i>
                                </span>
                                <span class="hide-menu">Dịch vụ</span>
                            </a>
                        </li>

                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Service" asp-action="ServiceRecord" aria-expanded="false">
                                <span>
                                    <i class="fa-solid fa-bolt"></i>
                                </span>
                                <span class="hide-menu"> <i class="fa-solid fa-plug-circle-bolt"></i> Chỉ số điện</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Maintainance" asp-action="ListMaintainance" aria-expanded="false">
                                <span>
                                    <i class="fa-regular fa-envelope"></i>
                                </span>
                                <span class="hide-menu"> Danh sách báo cáo</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Statistic" asp-action="ViewStatistic" aria-expanded="false">
                                <span>
                                    <i class="fa fa-bar-chart"></i>
                                </span>
                                <span class="hide-menu"> Thống kê phòng</span>
                            </a>
                        </li>
                    </ul>
                </nav>

            </div>

        </aside>

        <div class="body-wrapper">

            <header class="app-header" style="background-color:  whitesmoke">
                <nav class="navbar navbar-expand-lg navbar-light">
                    <ul class="navbar-nav">
                        <li class="nav-item d-block d-xl-none">
                            <a class="nav-link sidebartoggler nav-icon-hover" id="headerCollapse" href="javascript:void(0)">
                                <i class="ti ti-menu-2"></i>
                            </a>
                        </li>
                    </ul>
                    <div class="navbar-collapse justify-content-end px-0" id="navbarNav">
                        <ul class="navbar-nav flex-row ms-auto align-items-center justify-content-end">
                            <li class="nav-item me-3">
                                <span id="welcome-message" class="fw-bold text-primary"></span>
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link nav-icon-hover" href="javascript:void(0)" id="drop2" data-bs-toggle="dropdown"
                                   aria-expanded="false">
                                    <img src="~/images/profile/user-1.jpg" alt="" width="50" height="50" class="rounded-circle">
                                </a>
                                <div class="dropdown-menu dropdown-menu-end dropdown-menu-animate-up" aria-labelledby="drop2">
                                    <div class="message-body">
                                        <a href="/User/ViewProfile" class="d-flex align-items-center gap-2 dropdown-item">
                                            <i class="ti ti-user fs-6"></i>
                                            <p class="mb-0 fs-3">Tài Khoản</p>
                                        </a>
                                        <a href="/Auth/Login" class="btn btn-outline-primary mx-3 mt-2 d-block " onclick="logout()">Đăng xuất</a>

                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>

                </nav>
            </header>
            <!--  Header End -->
            <div class="container-fluid">
                @*
                For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
                *@
                @{
                }
                <body>
                    <div class="container mt-5">
                        <h1 center>@ViewData["Title"]</h1>

                        <!-- Bộ lọc -->
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div class="form-group mr-3">
                                <label> <i class="fa-regular fa-building"></i> Nhà</label>
                                <select class="form-control custom-select" id="buildings" onchange="search()">
                                </select>
                            </div>
                            <div class="form-group mr-3">
                                <label> <i class="fa-solid fa-house"></i>  Phòng</label>
                                <select class="form-control  custom-select" id="rooms" onchange="search()">
                                </select>
                            </div>
                            <div class="form-group mr-3">
                                <label>Tình trạng</label>
                                <select class="form-control  custom-select" id="status" onchange="search()">
                                </select>
                            </div>
                            <div>
                                <a href="/Facility/AddFacility" class="btn btn-success">
                                    + Thêm
                                </a>
                                
                            </div>
                        </div>

                        <!-- Tìm kiếm -->
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div class="d-flex align-items-center">
                                <div class="text-nowrap">Xem </div>
                                <select class="form-select mx-2" id="pageSizeEvent" onchange="onSelectPageSize()">
                                    <option value="2">2</option>
                                    <option value="5">5</option>
                                    <option value="10">10</option>
                                    <option value="25">25</option>
                                    <option value="50">50</option>
                                    <option value="100">100</option>
                                </select>
                                <div class="text-nowrap"> mục</div>
                            </div>
                            <div class="form-group d-flex align-items-center">
                                <label for="search" class="mr-2" style="margin-top: 5px;"> <i class="fa-solid fa-magnifying-glass fa-beat"></i>  </label>
                                <input type="text" id="keyword" class="form-control" style="width: 200px;" onchange="search()" placeholder="Tìm kiếm...">
                            </div>
                        </div>
                        <!-- Bảng dữ liệu -->
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>STT</th>
                                    <th>Tên tài sản</th>
                                    <th>Nhà</th>
                                    <th>Phòng</th>
                                    <th>Tình trạng</th>
                                    <th>Tùy chọn</th>
                                </tr>
                            </thead>
                            <tbody id="facilities">
                                
                            </tbody>
                        </table>



                        <!-- Phân trang -->
                        <div class="d-flex justify-content-between align-items-center">
                            <div>Đang xem <span id="startAt"></span> đến <span id="endAt"></span> trên tổng số @ViewBag.TotalRecord mục</div>
                            <div>
                                <button class="btn btn-light" onclick="onPrevPage()">Trước</button>
                                <button class="btn btn-light" onclick="onNextPage()">Tiếp</button>
                            </div>
                        </div>
                    </div>

                    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
                    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
                    <!-- Include Bootstrap and Font Awesome -->
                    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
                    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
                </body>

            </div>
        </div>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/sidebarmenu.js"></script>
    <script src="~/js/app.min.js"></script>
    <script src="~/lib/apexcharts/dist/apexcharts.min.js"></script>
    <script src="~/lib/simplebar/dist/simplebar.js"></script>
    <script src="~/js/dashboard.js"></script>
    <script>
        
        var totalRecord = 0;
        $(document).ready(function () {
            GetUserNameById();
            loadBuilding();
            // loadRoom();
            setKeyword();
            loadPaging();
            loadStatus();
            setTimeout(() => {
                var buildingId = $("#buildings").val();
                var roomId = $("#rooms").val();
                var statusId = $("#status").val();
                var keyword = $("#keyword").val();
                const token = getCookie('AuthToken');
                //Lấy user id
                const userId = getUserIdFromToken(token);
                getFacility(userId, 1, 10, keyword, roomId, buildingId, statusId);
            }, 200);
        })
        //////////////////////////////////////////////
        function onSelectPageSize() {
            var urlParams = new URLSearchParams(window.location.search);
            var pageSize = $("#pageSizeEvent").val();
            var buildingId = $("#buildings").val();
            var roomId = $("#rooms").val();
            var keyword = $("#keyword").val();
            var pageIndex = urlParams.get('pageIndex') ?? 1;
            const token = getCookie('AuthToken');
            //Lấy user id
            const userId = getUserIdFromToken(token);
            var statusId = $("#status").val();
            getFacility(userId, pageIndex, pageSize, keyword, roomId, buildingId, statusId);
        }
        function loadPaging() {
            var urlParams = new URLSearchParams(window.location.search);
            var pageIndex = urlParams.get('pageIndex') ?? 1;
            var pageSize = urlParams.get('pageSize') ?? 10;
            var startAt = parseInt((pageIndex - 1) * pageSize) + 1;
            var endAt = startAt + parseInt(pageSize) - 1;
            if (endAt > totalRecord) endAt = totalRecord;
            $("#pageSizeEvent").val(pageSize)
            $("#startAt").text(startAt);
            $("#endAt").text(endAt);
        }
        function onPrevPage() {
            var urlParams = new URLSearchParams(window.location.search);
            var pageIndex = urlParams.get('pageIndex') ?? 1;
            var pageSize = urlParams.get('pageSize') ?? 10;
            var buildingId = $("#buildings").val();
            var roomId = $("#rooms").val();
            var keyword = $("#keyword").val();
            const token = getCookie('AuthToken');
            //Lấy user id
            const userId = getUserIdFromToken(token);
            var statusId = $("#status").val();
            getFacility(userId, pageIndex, pageSize, keyword, roomId, buildingId, statusId);
        }
        function onNextPage() {
            var urlParams = new URLSearchParams(window.location.search);
            var pageIndex = urlParams.get('pageIndex') ?? 1;
            var pageSize = urlParams.get('pageSize') ?? 10;
            var buildingId = $("#buildings").val();
            var roomId = $("#rooms").val();
            var keyword = $("#keyword").val();
            var startAt = parseInt((pageIndex - 1) * pageSize) + 1;
            var endAt = startAt + parseInt(pageSize) - 1;
            const token = getCookie('AuthToken');
            //Lấy user id
            const userId = getUserIdFromToken(token);
            var statusId = $("#status").val();
            getFacility(userId, pageIndex, pageSize, keyword, roomId, buildingId, statusId);
        }

        //////////////////////////////////////////
        function setKeyword() {
            var urlParams = new URLSearchParams(window.location.search);
            var keyword = urlParams.get('keyword');
            $("#keyword").val(keyword)
        }

        function getUserIdFromToken(token) {
            try {
                const tokenParts = token.split('.');
                const payload = JSON.parse(atob(tokenParts[1]));
                return payload.UserId;
            } catch (error) {
                console.error("Không mã hóa đc token:", error);
                return null;

            }
        }
        ///////////////////////////////////////////////////
        function loadBuilding() {
            const token = getCookie('AuthToken');
            if (!token) {
                alert('Bạn chưa đăng nhập. Xin hãy quay lại trang login.');
                window.location.href = "/Auth/login";
                return;
            }
            var userId = getUserIdFromToken(token);
            $.ajax({
                url: `https://localhost:7056/api/Building/GetBuildingsByUserId/${userId}`,// Sửa api lấy all building thành api này
                type: 'GET',
                dataType: 'json',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('Authorization', `Bearer ${token}`);
                },
                success: function (response) {
                    renderBuilding(response);
                    displayBuildings(response); //Thêm cái này nữa
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi xảy ra:", error);
                }
            });
        }

        function renderBuilding(data) {
            var urlParams = new URLSearchParams(window.location.search);
            var buildingId = urlParams.get('buildingId');
            let html = '';
            for (var item of data) {
                html += `<option value="${item.id}" ${buildingId == item.id ? 'selected' : ''}>${item.name}</option>`
            }
            $("#buildings").html(html);
            loadRoom();
        }

        ///////////////////////////////////////////////////////
        function loadRoom() {
            const token = getCookie('AuthToken');
            var buildingId = $("#buildings").val();
            console.log("buildingId = " + buildingId)
            const userId = getUserIdFromToken();
            $.ajax({
                url: buildingId && buildingId > 0 ? `https://localhost:7056/api/Room/GetRoomByBuilding/${buildingId}` : `https://localhost:7056/api/Room/GetAllRoom/${userId}`,
                type: 'GET',
                dataType: 'json',
                headers: {
                    "Authorization": `Bearer ${token}`
                },
                success: function (response) {
                    renderRoom(response);
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi xảy ra:", error);
                }
            });
        }
        function renderRoom(data) {
            var urlParams = new URLSearchParams(window.location.search);
            var roomId = $("#rooms").val();
            let html = `<option value="-1" ${roomId <= 0 ? 'selected' : ''}>Chọn</option>`;
            for (var item of data) {
                html += `<option value="${item.id}" ${roomId == item.id ? 'selected' : ''}>${item.roomNumber}</option>`
            }
            $("#rooms").html(html);
        }

        ///////////////////////////////////////////////////////////
        function loadStatus() {
            const token = getCookie('AuthToken');
            $.ajax({
                url: 'https://localhost:7056/api/FacilityStatus/GetAllFacility',
                type: 'GET',
                dataType: 'json',
                headers: {
                    "Authorization": `Bearer ${token}`
                },
                success: function (response) {
                    renderStatus(response);
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi xảy ra:", error);
                }
            });
        }
        function renderStatus(data) {
            var urlParams = new URLSearchParams(window.location.search);
            var roomId = urlParams.get('statusId');
            let html = `<option value="-1" ${roomId <= 0 ? 'selected' : ''}>Chọn</option>`;
            for (var item of data) {
                html += `<option value="${item.id}">${item.description}</option>`
            }
            $("#status").html(html);
        }

        //////////////////////////////////////////////////
        function search() {
            var urlParams = new URLSearchParams(window.location.search);
            var buildingId = $("#buildings").val();
            var roomId = $("#rooms").val();
            var statusId = $("#status").val();
            var keyword = $("#keyword").val();
            var pageIndex = urlParams.get('pageIndex') ?? 1;
            var pageSize = urlParams.get('pageIndex') ?? 10;
            const token = getCookie('AuthToken');
            //Lấy user id
            const userId = getUserIdFromToken(token);
            getFacility(userId, pageIndex, pageSize, keyword, roomId, buildingId, statusId);
            loadRoom();
        }

        ///////////////////////////////////////////////////
        function DeleteFacility(id) {
            const token = getCookie('AuthToken');
            if (confirm("Bạn có chắc chắn muốn xóa cơ sở vật chất này không?")) {  // Hộp thoại xác nhận xóa
                $.ajax({
                    url: `https://localhost:7056/api/Facility?id=${id}`,  // Đảm bảo URL API đúng
                    type: "DELETE",  // Sử dụng phương thức DELETE
                    headers: {
                        "Authorization": `Bearer ${token}`
                    },
                    success: function (response) {
                        alert("Xóa cơ sở vật chất thành công");  // Thông báo khi xóa thành công
                        window.location.reload();  // Reload lại trang sau khi xóa
                    },
                    error: function (xhr, status, error) {
                        alert("Không thể xóa cơ sở vật chất");  // Thông báo lỗi khi xóa không thành công
                    }
                });
            } else {
                alert("Hủy xóa cơ sở vật chất");  // Thông báo khi hủy xóa
            }
        }

        //Hàm lấy list building theo UserId
        //-------------------------------------------------------
        function displayBuildings(buildings) {
            const sidebarContainer = $('.sidebar-submenu');

            // Clear previous content
            sidebarContainer.empty();

            if (buildings && buildings.length > 0) {
                // Update Sidebar
                buildings.forEach(building => {
                    sidebarContainer.append(`
                                                        <li class="sidebar-subitem">
                                                            <a href="/Room/ListRoom?buildingId=${building.id}" class="sidebar-sublink">
                                                                        <i class="fa-solid fa-house" style="color: #0672e5;"></i> ${building.name}
                                                            </a>
                                                        </li>
                                                    `);
                });
            } else {
                displayNoBuildingsMessage();
            }
        }
        function displayNoBuildingsMessage() {
            const sidebarContainer = $('.sidebar-submenu');
            const tableContainer = $('#buildingsContainer');

            // Notify in Sidebar
            sidebarContainer.empty();
            sidebarContainer.append(`
                                                <li class="sidebar-subitem">Không có tòa nhà nào</li>
                                            `);
        }
        //Lấy UserId
        function getUserIdFromToken(token) {
            try {
                var jwtToken = getCookie('AuthToken');
                token = jwtToken;
                const tokenParts = token.split('.');
                const payload = JSON.parse(atob(tokenParts[1]));
                return payload.UserId;
            } catch (error) {
                console.error("Không mã hóa đc token:", error);
                return null;
            }
        }
        function getFacility(userId, pageIndex, pageSize, keyword, roomId, buildingId, statusId) {
            let facilityUrl = 'https://localhost:7056/api/Facility/GetAllFacility';
            const token = getCookie('AuthToken');
            let query = '';
            if (userId) {
                query += `userId=${userId}`
            }
            else {
                alert("Vui lòng đăng nhập vào hệ thống");
                window.location.href = '/Auth/Login';
            }
            if (pageSize) {
                query += `&pageSize=${pageSize}`
            }
            if (pageIndex) {
                query += `&pageIndex=${pageIndex}`
            }
            if (keyword) {
                query += `&keyword=${keyword}`
            }
            if (roomId) {
                query += `&roomId=${roomId}`
            }
            if (buildingId) {
                query += `&buildingId=${buildingId}`
            }
            if (buildingId) {
                query += `&statusId=${statusId}`
            }
            console.log(query)
            $.ajax({
                url: `${facilityUrl}?${query}`,
                type: 'GET',
                dataType: 'json',
                headers: {
                    "Authorization": `Bearer ${token}`
                },
                success: function (response) {
                    console.log(response)
                    renderFacility(response.facilities);
                    totalRecord = response.totalRecord;
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi xảy ra:", error);
                }
            });
        }
        function renderFacility(data){
            let html = '';
            let stt = 1;
            const token = getCookie('AuthToken');
            for (var item of data) {
                html += '<tr>'
                html += `<td>${stt++}</td>`;
                html += `<td>${item.name}</td>`;
                html += `<td>${item.buildingName}</td>`;
                html += `<td>${item.roomNumber}</td>`;
                html += `<td>${item.facilityStatus}</td>`;
                html += `<td>
                            <a href="/Facility/EditFacility?id=${item.id}" class="btn btn-primary">
                        <i class="fas fa-edit"></i>
                    </a>
                            <button class="btn btn-danger" onclick="DeleteFacility('${item.id}')">
                        <i class="fa-solid fa-trash-can"></i>
                    </button>
                </td>`;
                html += '</tr>';
            }
            if (data.length) {
                $("#facilities").html(html)
            }
            else {
                html += '<tr>'
                html += '<td colspan="7" class="text-center">Không có dữ liệu tòa nhà hoặc phòng</td>'
                html += '</tr>'
                $("#facilities").html(html)
            }
        }
        function toggleSubmenu(event) {
            event.preventDefault();
            var submenu = event.currentTarget.nextElementSibling;
            submenu.style.display = submenu.style.display === "none" ? "block" : "none";
        }

        function GetUserNameById() {
            const token = getCookie('AuthToken');
            const userId = getUserIdFromToken(token);
            const url = `https://localhost:7056/api/User/GetUserNameById?id=${userId}`;

            $.ajax({
                url: url,
                type: 'GET',
                success: function (response) {
                    if (response && response.fullName) {
                        $('#welcome-message').text(`Xin chào ${response.fullName}`);
                    }
                },
                error: function (xhr) {
                    console.error('Error fetching user profile:', xhr.responseText);
                }
            });
        }
    </script>
</body>

</html>
