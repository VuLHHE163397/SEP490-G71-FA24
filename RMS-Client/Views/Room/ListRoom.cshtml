@using RMS_API.DTOs
@model IEnumerable<RMS_API.Models.Room>
@{
    var buildingId = ViewBag.SelectedBuildingId; // Lấy BuildingId từ phòng đầu tiên, nếu có
}

<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>RMS</title>
    <link rel="shortcut icon" type="image/png" href="~/images/logos/favicon.png" />
    <link rel="stylesheet" href="~/css/styles.min.css" />
    <style>

        /* Sidebar styling */
        .sidebar-submenu {
            padding-left: 15px;
            display: none;
        }

        .sidebar-sublink {
            color: #6c757d;
            font-size: 0.9rem;
            transition: color 0.3s;
        }

            .sidebar-sublink:hover {
                color: #0d6efd;
            }

        /* Sidebar arrow rotation */
        .rotate {
            transform: rotate(180deg);
            transition: transform 0.3s;
        }

        /* Table styling */
        .table-striped tbody tr:nth-of-type(odd) {
            background-color: rgba(0, 0, 0, 0.05);
        }

        /* Button styles */
        .btn-primary {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
        }

        /* Page wrapper styles */
        .page-wrapper {
            display: flex;
        }

        /* Main content area padding */
        .body-wrapper {
            /* padding: 20px; */
            flex-grow: 1;
        }

        /* Header navbar icon */
        .nav-icon-hover {
            cursor: pointer;
        }

        /* Profile image in dropdown */
        .navbar-nav .dropdown-menu img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
        }
    </style>
</head>

<body>
    <script>
        function getCookie(name) {
            const cookieString = document.cookie.split('; ').find(row => row.startsWith(`${name}=`));
            return cookieString ? decodeURIComponent(cookieString.split('=')[1]) : null;
        }

        const token = getCookie('AuthToken');
        if (!token) {
            console.error('Token không tìm thấy trong cookie.');
        }
        const tokenParts = token.split('.');
        const payload = JSON.parse(atob(tokenParts[1]));
        if (payload.Roles !== "Landlord") {
            window.location.href = "/Auth/login";
        }

        function logout() {
            document.cookie = "AuthToken=; path=/; expires=Sun, 01 Jan 1111 00:00:00 UTC; SameSite=None; Secure";
            window.location.href = "/Auth/Login";
        }

    </script>

    <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
         data-sidebar-position="fixed" data-header-position="fixed">

        <aside class="left-sidebar">

            <div>
                <div class="brand-logo d-flex align-items-center justify-content-between">
                    <a asp-controller="Building" asp-action="ListBuilding" class="text-nowrap logo-img">
                        <img src="~/images/logo.jpg" width="180" alt="" />
                    </a>
                    <div class="close-btn d-xl-none d-block sidebartoggler cursor-pointer" id="sidebarCollapse">
                        <i class="ti ti-x fs-8"></i>
                    </div>
                </div>

                <nav class="sidebar-nav scroll-sidebar" data-simplebar="">
                    <ul id="sidebarnav">
                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Trang chủ</span>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Building" asp-action="ListBuilding">
                                <span><i class="ti ti-layout-dashboard"></i></span>
                                <span class="hide-menu">Trang chủ</span>
                            </a>
                        </li>
                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Quản lý</span>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" href="#" aria-expanded="false" onclick="toggleSubmenu(event)">
                                <span><i class="ti ti-home"></i></span>
                                <span class="hide-menu">Quản lý phòng</span>
                                <span><i class="ti ti-chevron-down"></i></span>
                            </a>
                            <ul class="sidebar-submenu" style="display: block; list-style-type: none; padding-left: 20px;">
                            </ul>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Facility" asp-action="ListFacility" aria-expanded="false">
                                <span>
                                    <i class="fa-solid fa-gears"></i>
                                </span>
                                <span class="hide-menu">Cơ sở vật chất</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Service" asp-action="ListService" aria-expanded="false">
                                <span>
                                    <i class="ti ti-menu"></i>
                                </span>
                                <span class="hide-menu">Dịch vụ</span>
                            </a>
                        </li>

                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Service" asp-action="ServiceRecord" aria-expanded="false">
                                <span>
                                    <i class="fa-solid fa-bolt"></i>
                                </span>
                                <span class="hide-menu"> <i class="fa-solid fa-plug-circle-bolt"></i> Chỉ số điện</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Maintainance" asp-action="ListMaintainance" aria-expanded="false">
                                <span>
                                    <i class="fa-regular fa-envelope"></i>
                                </span>
                                <span class="hide-menu"> Danh sách báo cáo</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-controller="Statistic" asp-action="ViewStatistic" aria-expanded="false">
                                <span>
                                    <i class="fa fa-bar-chart"></i>
                                </span>
                                <span class="hide-menu"> Thống kê phòng</span>
                            </a>
                        </li>
                    </ul>

                </nav>

            </div>

        </aside>

        <div class="body-wrapper">
            <header class="app-header" style="background-color:  whitesmoke">
                <nav class="navbar navbar-expand-lg navbar-light">
                    <ul class="navbar-nav">
                        <li class="nav-item d-block d-xl-none">
                            <a class="nav-link sidebartoggler nav-icon-hover" id="headerCollapse" href="javascript:void(0)">
                                <i class="ti ti-menu-2"></i>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link nav-icon-hover" href="javascript:void(0)">
                                <i class="ti ti-bell-ringing"></i>
                                <div class="notification bg-primary rounded-circle"></div>
                            </a>
                        </li>
                    </ul>
                    <div class="navbar-collapse justify-content-end px-0" id="navbarNav">
                        <ul class="navbar-nav flex-row ms-auto align-items-center justify-content-end">
                            <li class="nav-item dropdown">
                                <a class="nav-link nav-icon-hover" href="javascript:void(0)" id="drop2" data-bs-toggle="dropdown"
                                   aria-expanded="false">
                                    <img src="~/images/profile/user-1.jpg" alt="" width="50" height="50" class="rounded-circle">
                                </a>
                                <div class="dropdown-menu dropdown-menu-end dropdown-menu-animate-up" aria-labelledby="drop2">
                                    <div class="message-body">
                                        <a href="/User/ViewProfile" class="d-flex align-items-center gap-2 dropdown-item">
                                            <i class="ti ti-user fs-6"></i>
                                            <p class="mb-0 fs-3">Tài Khoản</p>
                                        </a>
                                        <a href="/Auth/Login" class="btn btn-outline-primary mx-3 mt-2 d-block " onclick="logout()">Đăng xuất</a>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>

                </nav>
            </header>

            <div class="container-fluid">
                <div class="container">
                    <div class="text-center wow fadeInUp mb-5">
                        <h1>Quản Lý Phòng</h1>
                    </div>
                    <div class="row g-4">
                        <div class="col-md-3 offset-md-1">
                            <form method="get" asp-action="ListRoom" id="statusFilterForm">
                                <input type="hidden" name="buildingId" value="@ViewBag.SelectedBuildingId" />

                                <label>Trạng thái phòng:</label>
                                <div>
                                    @foreach (var status in ViewBag.Status as List<RMS_API.Models.RoomStatus>)
                                    {
                                        <div>
                                            <input type="checkbox" name="statusIds" value="@status.Id"
                                            @(ViewBag.SelectedStatusIds != null && ((List<int>)ViewBag.SelectedStatusIds).Contains(status.Id) ? "checked" : "")
                                                   onchange="submitFilterForm()" />
                                            <label>
                                                @status.Name
                                            </label>
                                        </div>
                                    }
                                </div>
                            </form>
                        </div>
                        @*
                        <div class="col-md-3">
                        <select class="form-select">
                        <option selected>Trạng thái phí</option>
                        <option>Đã đóng tiền</option>
                        <option>Chưa đóng tiền</option>
                        </select>
                        </div> *@

                        <div class="col-md-3 offset-md-1 d-flex flex-column align-items-end">
                            <div class="btn-group-vertical">
                                <!-- Nhập phòng -->
                                <a class="btn btn-success mb-2" style="width: 200px;" data-toggle="modal" data-target="#importRoomModal">
                                    <i class="ti ti-file-import"></i> Nhập Phòng
                                </a>
                                <!-- Các nút khác -->
                                <a class="btn btn-success mb-2" style="width: 200px;">
                                    <i class="ti ti-user"></i> Khách thuê
                                </a>
                                <a class="btn btn-success mb-2" style="width: 200px;" asp-controller="Room" asp-action="CreateRoom" asp-route-buildingId="@buildingId">
                                    <i class="ti ti-bed"></i> Thêm Phòng
                                </a>
                                <a asp-action="ExportToExcel" asp-route-buildingId="@buildingId" class="btn btn-success mb-2" style="width: 200px;">
                                    <i class="ti ti-file-export"></i> Xuất phòng
                                </a>
                            </div>
                        </div>
                        <!-- Modal để tải lên file Excel -->
                        <!-- Modal Nhập Phòng -->
                        <div class="modal fade" id="importRoomModal" tabindex="-1" role="dialog" aria-labelledby="importRoomModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="importRoomModalLabel">Nhập Phòng</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div>
                                            <input type="file" id="fileInput" />
                                            <button id="importButton" class="btn btn-primary mt-2">Import Rooms</button>
                                            <div id="importMessage" style="margin-top: 10px; color: green;"></div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @* Hiển thị đanh sách phòng *@

            <table class="table table-striped mt-4">
                <thead>
                    <tr>
                        <th></th> <!-- Thêm cột số thứ tự -->
                        <th>Tên Phòng</th>
                        <th>Diện tích</th>
                        <th>Giá phòng</th>
                        <th>Trạng thái</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        for (var i = 0; i < Model.Count(); i++) // Dùng for thay vì foreach
                        {
                            var room = Model.ElementAt(i);
                            <tr>
                                <td>@(i + 1)</td> <!-- Hiển thị số thứ tự -->
                                <td>@room.RoomNumber</td>
                                <td>@($"{room.Area} m²")</td>
                                <td>@string.Format("{0:N0} VNĐ", room.Price)</td>
                                <td>
                                    <form asp-action="UpdateRoomStatus" method="post" id="updateStatusRoom">
                                        <select class="form-select form-select-lg w-50 room-status-dropdown" onchange="submitUpdateStatus(this)"
                                                data-room-id="@room.Id">
                                            @if (ViewBag.RoomStatuses is SelectList roomStatuses)
                                            {
                                                foreach (var status in roomStatuses)
                                                {
                                                    var selected = status.Value == room.RoomStatusId.ToString() ? "selected" : "";
                                                    <!option value="@status.Value" @selected>@status.Text</!option>
                                                }
                                            }
                                        </select>
                                    </form>
                                </td>
                                <td>
                                    <a asp-controller="Room" asp-action="RoomDetail" asp-route-id="@room.Id" class="btn btn-info">
                                        <i class="ti ti-eye"></i>
                                    </a>
                                    <a asp-controller="Room" asp-action="EditRoom" asp-route-id="@room.Id" class="btn btn-warning">
                                        <i class="ti ti-pencil"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center">Tòa nhà chưa có phòng nào !!!</td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Include Bootstrap and Font Awesome -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script>

        $(document).ready(function () {
            loadBuilding();
        })

        //---------------------------------------------------------------
        //Lấy List Building ở Left Side
        //Lấy UserId
        function getUserIdFromToken(token) {
            try {
                const tokenParts = token.split('.');
                const payload = JSON.parse(atob(tokenParts[1]));
                return payload.UserId;
            } catch (error) {
                console.error("Không mã hóa đc token:", error);
                return null;
            }
        }

        function loadBuilding() {
            const token = getCookie('AuthToken');
            if (!token) {
                alert('Bạn chưa đăng nhập. Xin hãy quay lại trang login.');
                window.location.href = "/Auth/login";
                return;
            }
            var userId = getUserIdFromToken(token);
            $.ajax({
                url: `https://localhost:7056/api/Building/GetBuildingsByUserId/${userId}`,// Sửa api lấy all building thành api này
                type: 'GET',
                dataType: 'json',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('Authorization', `Bearer ${token}`);
                },
                success: function (response) {
                    renderBuilding(response);
                    displayBuildings(response); //Thêm cái này nữa
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi xảy ra:", error);
                }
            });
        }

        function renderBuilding(data) {
            var urlParams = new URLSearchParams(window.location.search);
            var buildingId = urlParams.get('buildingId');
            let html = `<option value="-1" ${buildingId <= 0 ? 'selected' : ''}>Tất cả</option>`;
            for (var item of data) {
                html += `<option value="${item.id}" ${buildingId == item.id ? 'selected' : ''}>${item.name}</option>`
            }
            $("#buildings").html(html);
        }

        function displayBuildings(buildings) {
            const sidebarContainer = $('.sidebar-submenu');

            // Clear previous content
            sidebarContainer.empty();

            if (buildings && buildings.length > 0) {
                // Update Sidebar
                buildings.forEach(building => {
                    sidebarContainer.append(`
                                                                                        <li class="sidebar-subitem">
                                                                                            <a href="/Room/ListRoom?buildingId=${building.id}" class="sidebar-sublink">
                                                                                                        <i class="fa-solid fa-house" style="color: #0672e5;"></i> ${building.name}
                                                                                            </a>
                                                                                        </li>
                                                                                    `);
                });
            } else {
                displayNoBuildingsMessage();
            }
        }
        function displayNoBuildingsMessage() {
            const sidebarContainer = $('.sidebar-submenu');
            const tableContainer = $('#buildingsContainer');

            // Notify in Sidebar
            sidebarContainer.empty();
            sidebarContainer.append(`
                                                                                <li class="sidebar-subitem">Không có tòa nhà nào</li>
                                                                            `);
        }
        //Lấy UserId
        function getUserIdFromToken(token) {
            try {
                const tokenParts = token.split('.');
                const payload = JSON.parse(atob(tokenParts[1]));
                return payload.UserId;
            } catch (error) {
                console.error("Không mã hóa đc token:", error);
                return null;
            }
        }

        //---------------------------------------------------------------


        function toggleSubmenu(event) {
            event.preventDefault();
            var submenu = event.currentTarget.nextElementSibling;
            submenu.style.display = submenu.style.display === "none" ? "block" : "none";
        }

        function submitFilterForm() {
            document.getElementById("statusFilterForm").submit();
        }

        const buildingId = @Html.Raw(ViewBag.SelectedBuildingId ?? "null"); // Truyền giá trị từ ViewBag

        document.getElementById("importButton").addEventListener("click", async function () {
            const fileInput = document.getElementById("fileInput");
            const importMessage = document.getElementById("importMessage");

            // Xóa thông báo cũ
            importMessage.textContent = "";

            // Kiểm tra xem BuildingId có hợp lệ không
            if (!buildingId || buildingId === "null") {
                importMessage.textContent = "Hãy chọn 1 tòa nhà";
                importMessage.style.color = "red";
                return;
            }

            // Kiểm tra xem người dùng đã chọn file chưa
            if (!fileInput.files || fileInput.files.length === 0) {
                importMessage.textContent = "Vui lòng chọn file có đuôi .xlsx để nhập phòng";
                importMessage.style.color = "red";
                return;
            }

            const file = fileInput.files[0];

            // Kiểm tra loại file
            if (!file.name.endsWith(".xlsx")) {
                importMessage.textContent = "Chỉ cho phép dùng file .xlsx .";
                importMessage.style.color = "red";
                return;
            }

            // Tạo FormData để gửi file
            const formData = new FormData();
            formData.append("file", file);

            const apiUrl = `https://localhost:7056/api/Room/ImportRooms/${buildingId}`;

            try {
                // Gửi request POST đến API
                const response = await fetch(apiUrl, {
                    method: "POST",
                    body: formData,
                });

                // Xử lý kết quả
                if (response.ok) {
                    const result = await response.json();
                    importMessage.textContent = `${result.message} Số phòng đã nhập vào: ${result.roomsCount}`;
                    importMessage.style.color = "green";
                    window.location.reload();
                } else {
                    const error = await response.text();
                    importMessage.textContent = `Xảy ra lỗi khi nhập phòng, vui lòng kiểm tra lại file excel`;
                    importMessage.style.color = "red";
                }
            } catch (err) {
                console.error("Error importing rooms:", err);
                importMessage.textContent = "Đã xảy ra lỗi khi nhập phòng, vui lòng kiểm tra lại file excel";
                importMessage.style.color = "red";
            }
        });


        function submitUpdateStatus(selectElement) {
            // var selectElement = document.querySelector('.room-status-dropdown');
            var roomId = selectElement.getAttribute('data-room-id');
            var statusId = selectElement.value;

            // Gửi PUT request tới API
            fetch(`/api/Room/updateRoomStatus/${roomId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(statusId)
            })
                .then(response => {
                    if (response.ok) {
                        alert("Cập nhật trạng thái phòng thành công!");
                    } else {
                        response.text().then(errorMessage => alert(`Có lỗi xảy ra: ${errorMessage}`));
                    }
                })
                .catch(error => alert('Có lỗi xảy ra: ' + error));
        }


        // Gửi file lên server
        document.getElementById("importRoomsBtn").addEventListener("click", function () {
            var formData = new FormData();
            var fileInput = document.getElementById("excelFile");

            if (fileInput.files.length === 0) {
                alert("Vui lòng chọn một file Excel.");
                return;
            }

            formData.append("file", fileInput.files[0]);
            formData.append("buildingId", @buildingId); // Truyền buildingId vào formData

            // Gửi yêu cầu POST lên API để nhập phòng
            fetch('/api/Room/ImportRooms/' + @buildingId, {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        alert(data.message); // Thông báo thành công
                        $('#importRoomModal').modal('hide'); // Đóng modal
                    } else {
                        alert("Có lỗi xảy ra khi nhập phòng.");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("Có lỗi xảy ra.");
                });
        });

    </script>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Thêm Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Thêm jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Thêm Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

</body>
</html>